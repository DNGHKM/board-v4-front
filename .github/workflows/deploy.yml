name: Build and Deploy Next.js

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Node.js 설정 (Next.js 빌드용)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # 3. 의존성 설치 및 Next.js 빌드
      - name: Install and Build Next.js
        run: |
          npm install
          npm run build

      # 4. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/board-v4-front:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/board-v4-front:latest

      # 6. EC2로 docker-compose.yml 전송
      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          source: docker-compose.yml
          target: /home/kdh/docker/board-v4-front
          debug: true

      # 7. EC2에서 Docker Compose 실행
      - name: Deploy on EC2 with Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd /home/kdh/docker/board-v4-front
            docker compose pull
            docker compose up -d
            docker image prune -af
